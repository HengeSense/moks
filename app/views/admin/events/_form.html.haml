= semantic_nested_form_for [:admin, @event], :html => {:multipart => true} do |f|
  = f.input :start_at, :as => :string, :input_html => {:class => "datepicker"}
  = f.input :end_at, :as => :string, :input_html => {:class => "datepicker"}
  = f.input :projects, :as => :check_boxes
  .clearfix
    = f.input :location, :as => :select, :collection => Location.all.map{|x| [x.name, x.id] }, :include_blank => false
    = f.input :promoter
    = f.input :cost
    = f.input :discounted_cost
    = f.input :discount_reason
  #language-tabs
    %ul.language-selection
      - I18n.available_locales.each do |locale|
        %li{:id => "picklang-#{locale}"}= link_to t(:language_name, :locale => locale), "#lang-#{locale}"
    - I18n.available_locales.each do |locale|
      %div{:id => "lang-#{locale}"}
        = f.globalize_fields_for locale do |en|
          = "#{t :name} (#{t(:language_name, :locale => locale)})"
          = en.text_field :name
          .clearfix
            = "#{t :body} (#{t(:language_name, :locale => locale)})"
            = en.text_area :description, :class => 'ckeditor'
          .clearfix
            = "#{t :notes} (#{t(:language_name, :locale => locale)})"
          = en.text_area :notes
  = f.fields_for :images do |ff|
    .add_image
      %p= t :add_image_event
      - unless ff.object.new_record?
        = image_tag ff.object.filename.url(:thumbnail)
      = ff.input :filename, :as => :file
      = ff.input :credit
      - I18n.available_locales.each do |locale|
        %div{:id => "caption-#{ff.object.id.to_s}-lang-#{locale}"}
        = ff.globalize_fields_for locale do |l|
          = "#{t :caption} (#{t(:language_name, :locale => locale)})"
          = l.text_field :caption
      = ff.link_to_remove t :remove_image
  .cl= f.link_to_add t(:add_extra_image), :images
  = f.fields_for :sounds do |ff|
    .add_image
      %p= (ff.object.new_record? ? t(:add) : t(:change))+ t(:soundfile_for_event)
      - unless ff.object.new_record?
        - unless ff.object.filename.blank?
          Current file:
          = ff.object.filename.url
      = ff.input :filename, :as => :file
      = ff.input :soundcloud_id, :label => 'Or soundcloud id# instead of uploading file'
      - I18n.available_locales.each do |locale|
        %div{:id => "sound-#{ff.object.id.to_s}-lang-#{locale}"}
        = ff.globalize_fields_for locale do |l|
          = "#{t :title_name} (#{t(:language_name, :locale => locale)})"
          = l.text_field :name
          = "#{t :description} (#{t(:language_name, :locale => locale)})"
          = l.text_field :description
      = ff.input :published, :label => t(:published), :hint => t(:uncheck_to_hide)
      = ff.link_to_remove t(:remove_sound)
  .cl= f.link_to_add t(:add_sound_file), :sounds
  = f.fields_for :videos do |ff|
    .add_image
      %p= (ff.object.new_record? ? 'Embed a' : 'Change the') + " video for this event:"
      - unless ff.object.new_record?
        Current file:
        = ff.object.name
      = ff.input :videohost, :as => :select, :collection => Videohost.all.map{|x| [x.name, x.id]}
      = ff.input :provider_id_code, :label => 'ID# of video (found in URL)'
      - I18n.available_locales.each do |locale|
        %div{:id => "sound-#{ff.object.id.to_s}-lang-#{locale}"}
        = ff.globalize_fields_for locale do |l|
          = "#{t :title_name} (#{t(:language_name, :locale => locale)})"
          = l.text_field :name
          = "#{t :description} (#{t(:language_name, :locale => locale)})"
          = l.text_field :description
      = ff.input :published, :label => t(:published), :hint => t(:uncheck_to_hide)
      = ff.link_to_remove t :remove_video
  .cl= f.link_to_add 'embed a video from YouTube or Vimeo', :videos
  .after
    = f.fields_for :carousels do |ff|
      - if ff.object.carousel_image?
        = image_tag ff.object.carousel_image.url(:thumb)

      = ff.input :carousel_image
      = ff.input :active      
      = ff.link_to_remove t :remove_carousel_image
    = f.link_to_add t(:frontpage_carousel_image), :carousels  
  = f.input :published
  = f.submit
